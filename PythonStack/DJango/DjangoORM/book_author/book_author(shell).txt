create 5 books:

>>> Book.objects.create(title='C sharp',desc='C sharp Book')
<Book: Book object (1)>
>>> Book.objects.create(title='java',desc='java Book')
<Book: Book object (2)>
>>> Book.objects.create(title='Python',desc='Python Book')
<Book: Book object (3)>
>>> Book.objects.create(title='PHP',desc='PHP Book')
<Book: Book object (4)>
>>> Book.objects.create(title='Ruby',desc='Ruby Book')
<Book: Book object (5)>
===================================================================
create 5 Author:

>>> Author.objects.create(first_name='Jane',last_name='Austen')
<Author: Author object (1)>
>>> Author.objects.create(first_name='Emily',last_name='Dickinson')
<Author: Author object (2)>
>>> Author.objects.create(first_name='Fyodor',last_name='Dostoevsky')
<Author: Author object (3)>
>>> Author.objects.create(first_name='William',last_name='Shakespeare')
<Author: Author object (4)>
>>> Author.objects.create(first_name='Lau',last_name='Tzu')
<Author: Author object (5)>
===================================================================
update book name from 'c sharp':

>>> update=Book.objects.get(id=1)
>>> update.title='C#'
>>> update.save()
===================================================================
update author name of the 4th to 'Bill':

>>> update=Author.objects.get(id=4)
>>> update.first_name='Bill'
>>> update.save()
===================================================================
assign first author to first 2 books:

>>> first_book=Book.objects.get(id=1)
>>> second_book=Book.objects.get(id=2)
>>> first_author=Author.objects.get(id=1)
>>> first_author.books.add(fisrt_book)
Traceback (most recent call last):
  File "<console>", line 1, in <module>
NameError: name 'fisrt_book' is not defined
>>> first_author.books.add(first_book)
>>> first_author.books.add(second_book)
===================================================================
assign second author to first 3 books:

>>> third_book=Book.objects.get(id=3)
>>> second_book=Book.objects.get(id=2)
>>> first_book=Book.objects.get(id=1)
>>> second_author=Author.objects.get(id=2)
>>> second_author.books.add(first_book)
>>> second_author.books.add(second_book)
>>> second_author.books.add(third_book)
===================================================================
assign third author to first 4 books:

>>> third_author=Author.objects.get(id=3)
>>> fourth_book=Book.objects.get(id=4)
>>> third_book=Book.objects.get(id=3)
>>> second_book=Book.objects.get(id=2)
>>> first_book=Book.objects.get(id=1)
>>> third_author.books.add(first_book)
>>> third_author.books.add(second_book)
>>> third_author.books.add(third_book)
>>> third_author.books.add(fourth_book)
===================================================================
assign fourth author to all books:

>>> fourth_author=Author.objects.get(id=4)
>>> fifth_book=Book.objects.get(id=5)
>>> fourth_book=Book.objects.get(id=4)
>>> third_book=Book.objects.get(id=3)
>>> second_book=Book.objects.get(id=2)
>>> first_book=Book.objects.get(id=1)
>>> fourth_author.books.add(first_book)
>>> fourth_author.books.add(second_book)
>>> fourth_author.books.add(third_book)
>>> fourth_author.books.add(fourth_book)
>>> fourth_author.books.add(fifth_book)
===================================================================
retreive all authors of the third book:

>>> third_book=Book.objects.get(id=3)
>>> third_book.authors.all()
<QuerySet [<Author: Author object (2)>, <Author: Author object (3)>, <Author: Author object (4)>]>
===================================================================
remove first author of the first book:

>>> third_book=Book.objects.get(id=3)
>>> first_author=Author .objects.get(id=1)
>>> third_book.authors.remove(first_author)
===================================================================
adding the 5th author to second book authors:

>>> fifth_author=Author.objects.get(id=5)
>>> second_book=Book.objects.get(id=2)
>>> second_book.authors.add(fifth_author)
===================================================================
all books that belongs to third author:

>>> third_author=Author.objects.get(id=3)
>>> third_author.books.all()
<QuerySet [<Book: Book object (1)>, <Book: Book object (2)>, <Book: Book object (3)>, <Book: Book object (4)>]>
===================================================================
the authors that contributed to the 5th book:

>>> fifth_book=Book.objects.get(id=5)
>>> fifth_book.authors.all()
<QuerySet [<Author: Author object (4)>]>